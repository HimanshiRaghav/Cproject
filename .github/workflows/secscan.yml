name: Security Scan
on:
  
  workflow_call:
    inputs:
      compiler:
        description: Compiler either gcc or clang
        required: true
        type: string
      build-system:
        description: Build system either make or cmake
        required: true
        type: string

jobs:      
  security-scans:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Validate inputs
      run: |
        if [[ "${{ inputs.compiler }}" != "gcc" && "${{ inputs.compiler }}" != "clang" ]]; then             echo "Invalid compiler: ${{ inputs.compiler }}"
          exit 1
        fi
        if [[ "${{ inputs.build-system }}" != "make" && "${{ inputs.build-system }}" != "cmake" ]]; then
          echo "Invalid build system: ${{ inputs.build-system }}"
          exit 1
        fi
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake clang cppcheck valgrind clang-tools
        if [[ "${{ inputs.compiler }}" == "gcc" ]]; then
          sudo apt-get install -y build-essential
        else
          sudo apt-get install -y clang make
        fi
    - name: Configure Compiler environment
      run: |
        if [[ "${{ inputs.compiler }}" == "clang" ]]; then
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        else
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        fi

    - name: Run cppcheck (Static- without executing)
      run: |
        cppcheck --enable=all --inconclusive --quiet . || true

    - name: Run clang Static
      run: | 
        scan-build cmake .|| true
        scan-build make || true


    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: c,cpp
        build-mode: manual
        setup: true

    - name: Create CodeQL database manually
      run: |
        export CODEQL_DATABASE="cpp-codeql-db"
        mkdir -p "$CODEQL_DATABASE"
        echo "CODEQL_DATABASE=$CODEQL_DATABASE" >> $GITHUB_ENV

    - name: Trace Make Build with CodeQL
      if: ${{ inputs['build-system'] == 'make' }}
      shell: bash
      run: |
        CODEQL=$(find /opt/hostedtoolcache/CodeQL -type f -name codeql | head -n 1)
        echo "Using CodeQL CLI: $CODEQL"
        "$CODEQL" database trace-command "$CODEQL_DATABASE" -- make

    - name: Trace CMake Build with CodeQL
      if: ${{ inputs['build-system'] == 'cmake' }}
      shell: bash
      run: |
        CODEQL=$(find /opt/hostedtoolcache/CodeQL -type f -name codeql | head -n 1)
        echo "Using CodeQL CLI: $CODEQL"
        "$CODEQL" database trace-command "$CODEQL_DATABASE" -- bash -c 'mkdir build && cd build && cmake .. && make'

    - name: Debug CodeQL Path
      run: find /opt/hostedtoolcache/CodeQL -type f -name codeql

  
    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v3



    - name: Upload Scan Logs
      if: always() 
      uses: actions/upload-artifact@v4
      with: 
        name: static-scan-logs
        path: logs/
