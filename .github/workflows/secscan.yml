name: Security Scan

on:
  push:
    branches: [ main ]
  workflow_call:
    inputs:
      compiler:
        description: Compiler either gcc or clang
        required: true
        type: string
      build-system:
        description: Build system either make or cmake
        required: true
        type: string

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  security-scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate inputs
        run: |
          if [[ "${{ inputs.compiler }}" != "gcc" && "${{ inputs.compiler }}" != "clang" ]]; then 
            echo "Invalid compiler: ${{ inputs.compiler }}"
            exit 1
          fi
          if [[ "${{ inputs.build-system }}" != "make" && "${{ inputs.build-system }}" != "cmake" ]]; then
            echo "Invalid build system: ${{ inputs.build-system }}"
            exit 1
          fi

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake make clang cppcheck valgrind build-essential clang-tools

      - name: Configure Compiler environment
        run: |
          if [[ "${{ inputs.compiler }}" == "clang" ]]; then
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          else
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          fi

      - name: Run cppcheck (Static Analysis)
        run: |
          cppcheck --enable=all --inconclusive --quiet . || true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c,cpp
          build-mode: manual
          setup: true

      - name: Initialize CodeQL Database
        run: |
          CODEQL=$(find /opt/hostedtoolcache/CodeQL -type f -name codeql | head -n 1)
          echo "Using CodeQL CLI: $CODEQL"
          $CODEQL database init cpp-codeql-db --language=cpp --source-root=.
          echo "CODEQL=$CODEQL" >> $GITHUB_ENV

      - name: Prepare Build Script
        if: ${{ inputs.build-system == 'make' }}
        run: |
          echo '#!/bin/bash' > build-codeql.sh
          echo '[ -f Makefile ] && make clean || echo "No clean target"' >> build-codeql.sh
          echo 'make VERBOSE=1' >> build-codeql.sh
          chmod +x build-codeql.sh

      - name: Prepare CMake Build Script
        if: ${{ inputs.build-system == 'cmake' }}
        run: |
          echo '#!/bin/bash' > build-cmake.sh
          echo 'mkdir -p build' >> build-cmake.sh
          echo 'cd build' >> build-cmake.sh
          echo 'cmake ..' >> build-cmake.sh
          echo 'make VERBOSE=1' >> build-cmake.sh
          chmod +x build-cmake.sh

      - name: Trace CodeQL Build (Make)
        if: ${{ inputs.build-system == 'make' }}
        run: |
          $CODEQL database trace-command cpp-codeql-db ./build-codeql.sh

      - name: Trace CodeQL Build (CMake)
        if: ${{ inputs.build-system == 'cmake' }}
        run: |
          $CODEQL database trace-command cpp-codeql-db ./build-cmake.sh

      - name: Finalize CodeQL Database
        run: |
          $CODEQL database finalize cpp-codeql-db

      - name: Analyze CodeQL
        uses: github/codeql-action/analyze@v3

      - name: Upload CodeQL Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-logs
          path: |
            cpp-codeql-db/log
            cpp-codeql-db/tracing

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-scan-logs
          path: logs/
